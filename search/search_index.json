{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello, welcome to my site! My name is Stuart Christhilf, and I'm excited to share with you my diverse portfolio of projects and activities spanning several years. In addition to the project types listed above, I've also been involved in various other endeavors. Feel free to explore my site to discover more about my journey and the exciting projects I've been a part of. Thank you for visiting!","title":"Home"},{"location":"Engineering/","text":"Explore My Notable Engineering Projects Here, you'll find a collection of some of the remarkable engineering projects I've had the pleasure of working on. Click on the images above to dive into the details of these projects, and feel free to explore more of my other endeavors. Your curiosity is welcome!","title":"Engineering Projects"},{"location":"about/","text":"Welcome to my corner of the internet! I'm Stuart Christhilf, currently a student at Charlotte Latin School. My passions lie in Engineering and Computer Science. I proudly graduated from Fab Academy in 2023 and am on track to complete high school in 2025. My plans for college include a double major in Electrical Engineering and Computer Science, with a potential minor in Mechanical or Aerospace Engineering. Join me on my educational journey as I explore these exciting fields!","title":"About"},{"location":"coding/","text":"Discover My Notable Coding Projects Explore a variety of coding projects I've been involved in, including: Dive into the details of these coding adventures, and feel free to explore more of my other journey's on the rest of my page. Your curiosity is welcomed!","title":"Coding Projects"},{"location":"coding-projects/Turtle-Typer/","text":"Turtle Typer : A Fun Typing Game with a Twist Turtle Typer is a Java Data Structures (H) final project I developed during my junior year of high school. It's not just a typical typing test; it's a challenge that measures your typing speed using interesting turtle facts. Planning For the planning of my code I designed a flowchart outlining my code. It had a couple main aspects, being that I wanted two data structures one that holds all the characters the player types and one that holds the characters of the sentence they are supposed to type. I wanted the sentences to be held in a tree that I could go through depending on how well they do. I also wanted an observer that would compare the two data structures as if they were a hash table. Using this as my basic plan I was able to create a working code that almost did everything I wanted at first. Programming Process As for the process of actually programming I started off by programming the actual site shown in a file called index.html. It was the backbone of the entire project being what the player actually sees. After creating it I went on to create the player list and have its inputs be made by what the player types in the html element text box in the index file. After I made the player list I made the turtle tree class which holds all the sentences/ facts that the player will need to type. Once I had created that I had a little trouble making it so that you could navigate that tree in the index class so that it could be displayed on the website, but figured out a flaw in the constructors of my original tree class and could then easily navigate through it in the index class, in the process also making it a singleton because it could only be called by the index class because of the variables required to call it. Next I had to make an observer to compare the two data structures of characters to make sure they match. This took by far the longest because of getting all the data and comparing it, but by adding some extra methods I was able to get it to be able to access the other data structures and be able to check them, and then cause the index code to move on to the next sentence. Using and Showing Off Your Code Slides link Here is the slides where I go in-depth on my code and its uses that I used for my presentation.","title":"Turtle Typer"},{"location":"coding-projects/Turtle-Typer/#planning","text":"For the planning of my code I designed a flowchart outlining my code. It had a couple main aspects, being that I wanted two data structures one that holds all the characters the player types and one that holds the characters of the sentence they are supposed to type. I wanted the sentences to be held in a tree that I could go through depending on how well they do. I also wanted an observer that would compare the two data structures as if they were a hash table. Using this as my basic plan I was able to create a working code that almost did everything I wanted at first.","title":"Planning"},{"location":"coding-projects/Turtle-Typer/#programming-process","text":"As for the process of actually programming I started off by programming the actual site shown in a file called index.html. It was the backbone of the entire project being what the player actually sees. After creating it I went on to create the player list and have its inputs be made by what the player types in the html element text box in the index file. After I made the player list I made the turtle tree class which holds all the sentences/ facts that the player will need to type. Once I had created that I had a little trouble making it so that you could navigate that tree in the index class so that it could be displayed on the website, but figured out a flaw in the constructors of my original tree class and could then easily navigate through it in the index class, in the process also making it a singleton because it could only be called by the index class because of the variables required to call it. Next I had to make an observer to compare the two data structures of characters to make sure they match. This took by far the longest because of getting all the data and comparing it, but by adding some extra methods I was able to get it to be able to access the other data structures and be able to check them, and then cause the index code to move on to the next sentence. Using and Showing Off Your Code","title":"Programming Process"},{"location":"coding-projects/Turtle-Typer/#slides","text":"link Here is the slides where I go in-depth on my code and its uses that I used for my presentation.","title":"Slides"},{"location":"engineering-projects/Tensegrity-Table/","text":"The Tensegrity Table: A Magical Engineering Project During my sophomore year of high school, in week 7 of computer-controlled machining , I embarked on the fascinating journey of creating the Tensegrity Table. This project leverages the incredible force of tension to make the table appear as though it defies gravity, almost like magic. Planning To begin, I needed to gain a deep understanding of how a tensegrity table operates. Through research and exploration, I created this diagram to illustrate its mechanics: In the diagram, you can see that the inner wire is the primary component responsible for supporting the table. The central wire bears the weight of the entire structure, while the corner wires prevent the table from toppling over by keeping it firmly in place. When these forces are combined, they create the illusion of a floating table.","title":"Tensegrity Table"},{"location":"engineering-projects/Tensegrity-Table/#planning","text":"To begin, I needed to gain a deep understanding of how a tensegrity table operates. Through research and exploration, I created this diagram to illustrate its mechanics: In the diagram, you can see that the inner wire is the primary component responsible for supporting the table. The central wire bears the weight of the entire structure, while the corner wires prevent the table from toppling over by keeping it firmly in place. When these forces are combined, they create the illusion of a floating table.","title":"Planning"}]}